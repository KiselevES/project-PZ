class mainObjectClass {
    constructor() {
        //интервал запросов
        this.requestInterval = 10 * 1000;

        //время отправки сообщения (переаодим в сек)
        this.messageTime = 23 * 60;

        //время до просрочки (переводим в сек)
        this.expirationTime = 30 * 60;

        //дата
        const currentDate = new Date();
        this.currentDate = currentDate.getDate();

        //пустой массив под заказы
        this.orders = [];
    }
}
class orderClass {
    constructor(orderNumber) {
        this.unixTime = parseInt(new Date().getTime() / 1000);
        this.date = parseInt(new Date().getDate());
        this.expired = false;
        this.messageSent = false;
        this.complete = false;
        this.completeTime = 0;
        this.inQueue = false;
        this.preparing = false;
        this.orderNumber = orderNumber;
        this.remade = false;
    }

    setExpired() {
        this.expired = true;
    }

    setMessageSent() {
        this.messageSent = true;
    }

    setTime(time) {
        this.completeTime = time - this.unixTime;
    }

    setQueue() {
        this.inQueue = true;
        this.preparing = false;
    }

    setPreparing() {
        this.preparing = true;
        this.inQueue = false;
    }

    setComplete() {
        this.complete = true;
        this.preparing = false;
        this.inQueue = false;
    }

    setRemade(){
        this.Complete = false;
        this.Remade = true;
    }

}

function getMainObject() {
    return JSON.parse(localStorage.getItem('mainObject'));
}

function isMainObjectExists() {
    return localStorage.getItem('mainObject') !== null;
}

function setMainObject(mainObject) {
    localStorage.setItem('mainObject', JSON.stringify(mainObject));
}

function ismainObjectContainsOrder(mainObject, orderNumber) {
    for (let i = 0; i < mainObject.orders.length; i++) {
        if (mainObject.orders[i].orderNumber === orderNumber) {
            return true;
        }
    }
    return false;
}

function getSameOrder(newContentObject, orderNumber) {
    for (let i = 0; i < newContentObject.orders.length; i++) {
        if (newContentObject.orders[i].orderNumber === orderNumber) {
            return newContentObject.orders[i].orderNumber;
        }
    }
    return false;
}

function isOrderRemade(mainObject, orderNumber) {
    for (let i = 0; i < mainObject.orders.length; i++) {
        if (mainObject.orders[i].orderNumber === orderNumber && mainObject.orders[i].isComplete === true) {
            return true;
        }
    }
    return false;
}
document.addEventListener("DOMContentLoaded", () => {
    function setContentHeight() {
        const header = document.querySelector('.header');
        const wrapper = document.querySelector('.wrapper');
        const footer = document.querySelector('.footer');
        const setHeightContainer = document.querySelector('.set-height');
        const neededHeight = wrapper.offsetHeight - header.offsetHeight - footer.offsetHeight;

        if (setHeightContainer.offsetHeight < neededHeight) {
            setHeightContainer.style.height = neededHeight + 'px';
        }
    }

    setContentHeight();
    window.addEventListener('resize', setContentHeight);
})



const model = {


    callExternalContent() {
        return new Promise((resolve, reject) => {
            const x = new XMLHttpRequest();

            //ajax запрос через прокси cors-anywhere
            //x.open('GET', 'https://cors-anywhere.herokuapp.com/https://akson.ru/personal/order/table1/?STORE_ID=11');
            x.open('GET', 'pz4.html');

            //x.timeout = 5000;
            x.send();
            x.onload = () => {
                if (x.status != 200) {
                    reject(x.statusText)
                } else {
                    resolve(x.responseText || '');
                }
            };
        })
    },
    //
    getContent(externalContent) {
        //вытаскиваем таблицу из исходного кода
        const cutExternalContent = externalContent.substr(3196, externalContent.length - 3370);
        //console.log(cutExternalContent);
        const table = document.querySelector('.table');
        table.innerHTML = cutExternalContent;
        //вытаскиваем строки
        const rows = document.getElementsByTagName('tr');
        //переменная для строк фильтрованной таблицы
        let filteredRows = [];

        //удаляем строки заголовков таблиц, удаляем отмененные заказы, формируем одну таблицу из двух
        for (let i = 0; i < rows.length; i++) {
            if (rows[i].innerHTML.length !== 377) {
                if (rows[i].children[3].innerHTML.length > 100) {
                    rows[i].parentNode.removeChild(rows[i]);
                } else {
                    filteredRows.push(rows[i]);
                }
            }
        }
        //удаляем четвертую ячейку
        for (let i = 0; i < filteredRows.length; i++) {
            filteredRows[i].removeChild(filteredRows[i].children[3]);
        }

        const newContentObject = new mainObjectClass();
        filteredRows.forEach((item) => {
            const orderNumber = parseInt(item.children[0].children[0].children[0].innerHTML);
            const order = new orderClass(orderNumber);
            //console.log(item.children[1].children[0].innerHTML.length);
            if (item.children[1].children[0].innerHTML.length > 30) {
                order.setQueue();
            } else if (item.children[2].children[0].innerHTML.length > 30) {
                order.setPreparing();
            }
            newContentObject.orders.push(order);
        })

        //удаляем таблицу
        table.innerHTML = '';

        if (!isMainObjectExists()) {
            setMainObject(newContentObject);
            this.getContent(externalContent);
        } else {
            const notFormattedmainObject = getMainObject();
            const mainObject = new mainObjectClass();

            mainObject.requestInterval = notFormattedmainObject.requestInterval;
            mainObject.messageTime = notFormattedmainObject.messageTime;
            mainObject.expirationTime = notFormattedmainObject.expirationTime;

            notFormattedmainObject.orders.forEach((item) => {
                let currentOrder = new orderClass(item.orderNumber);
                currentOrder.expired = item.expired;
                currentOrder.messageSent = item.messageSent;
                currentOrder.complete = item.complete;
                currentOrder.completeTime = item.completeTime;
                currentOrder.inQueue = item.inQueue;
                currentOrder.preparing = item.preparing;
                currentOrder.remade = item.remade;
                currentOrder.unixTime = item.unixTime;
                currentOrder.date = item.date;
                mainObject.orders.push(currentOrder);
            })


            // Добавляем новые заказы
            newContentObject.orders.forEach((item, i) => {
                if (!ismainObjectContainsOrder(mainObject, item.orderNumber)) {
                    mainObject.orders.push(newContentObject.orders[i]);
                }
            })
            //если старого заказа нет в списке заказов нового объекта, помечаем старый подтвержденным
            mainObject.orders.forEach((item) => {
                if (!getSameOrder(newContentObject, item.orderNumber)) {
                    item.setComplete();
                }
            })
            //получаем перевыгруженные заказы
            newContentObject.orders.forEach((item) => {
                if (isOrderRemade(mainObject, item.orderNumber)) {
                    for (let i = 0; i < mainObject.orders.length; i++) {
                        if (mainObject.orders[i].orderNumber === item.orderNumber) {
                            mainObject.orders[i].setRemade();
                            mainObject.orders[i].expired = item.expired;
                            mainObject.orders[i].messageSent = false;
                            mainObject.orders[i].unixTime = parseInt(new Date().getTime() / 1000);
                            mainObject.orders[i].complete = false;
                            mainObject.orders[i].completeTime = 0;
                            mainObject.orders[i].inQueue = item.inQueue;
                            mainObject.orders[i].preparing = item.preparing;
                            mainObject.orders[i].date = item.date;
                        }
                    }
                }
            })

            //задаем время наборки
            mainObject.orders.forEach((item) => {
                if (item.complete === false) {
                    item.setTime(parseInt(new Date().getTime() / 1000));
                }
            })

            //проверяем на просрочку

            mainObject.orders.forEach((item) => {
                if (item.completeTime > mainObject.expirationTime) {
                    item.expired = true;
                }
            })

            //удаляем заказы возрастом более 10 дней
            for (let i = mainObject.orders.length - 1; i >= 0; i--) {
                if (parseInt(new Date().getTime() / 1000) - mainObject.orders[i].unixTime > 864000) {
                    mainObject.orders.splice(i, 1);
                }
            }


            setMainObject(mainObject);
            console.log(mainObject);
            return mainObject;
        }
    }


}
view = {
    drawTable(){

    }
}

document.addEventListener("DOMContentLoaded", () => {

    model.callExternalContent()
        .then((response) => {
            model.getContent(response);
        })
        .then((mainObject)=> {
            view.drawTable(mainObject);
        })








    // // Функция перевода количества секунд в минуты и секунды
//     function unixTimeToNormal(seconds) {
//         let minutes = Math.floor(seconds / 60) + '';
//         let secs = seconds % 60 + '';
//         if (secs.length < 2) {
//             secs = '0' + secs;
//         }
//         return result = minutes + ':' + secs
//     }
//
// //---добавляем функцию проверки наличия заказа в session storage
//     function isOrderNumberInSessionStorage(orderNumber) {
//         if (sessionStorage.getItem(orderNumber)) {
//             return true;
//         } else {
//             return false;
//         }
//     }
//
// //функция проверяет наличие заказа в строке "отправить" в session storage
//     function isAddedToSendString(orderNumber) {
//         let text = sessionStorage.getItem('to-send');
//         if (text) {
//             let ordersArray = text.split('|');
//             for (i = 0; i < ordersArray.length; i++) {
//                 if (orderNumber === parseInt(ordersArray[i])) {
//                     return true
//                 }
//             }
//         }
//     }
//
// //Функция оверяет наличие заказа в строке просроченных в session storage
//     function isAdded(orderNumber) {
//         let text = sessionStorage.getItem('expired');
//         if (text) {
//             let ordersArray = text.split('|');
//             for (i = 0; i < ordersArray.length; i++) {
//                 if (orderNumber === parseInt(ordersArray[i])) {
//                     return true
//                 }
//             }
//         }
//         return false
//     }
//
// //Функция получения данных
//     function callExternalContent() {
//         return new Promise((resolve, reject) => {
//             const x = new XMLHttpRequest();
//
//             //ajax запрос через прокси cors-anywhere
//             x.open('GET', 'https://cors-anywhere.herokuapp.com/https://akson.ru/personal/order/table1/?STORE_ID=11');
//             //x.open('GET', 'pz.html');
//             //x.open('GET', 'pz2.html');
//             //x.timeout = 5000;
//             x.send();
//             x.onload = () => {
//                 if (x.status != 200) {
//                     reject(x.statusText)
//                 } else {
//                     resolve(x.responseText || '');
//                 }
//             };
//         })
//     }
//
// //Функция проверки наличия строки expired в session storage
//     function doesSessionStorageContainsExpiredString() {
//         if (sessionStorage.getItem('expired')) {
//             return true;
//         } else {
//             return false
//         }
//     }
//
// //Функция проверки наличия строки "отправить" в session storage
//     function doesSessionStorageContainsToSendString() {
//         if (sessionStorage.getItem('to-send')) {
//             return true;
//         } else {
//             return false
//         }
//     }
//
// //Функция проверки наличия строки "отправлено" в session storage
//     function doesSessionStorageContainsSentString() {
//         if (sessionStorage.getItem('sent')) {
//             return true;
//         } else {
//             return false
//         }
//     }
//
// //Функция отправки сообщения в Telegram канал
//     function sendMessage(message) {
//         return new Promise((resolve, reject) => {
//             const x = new XMLHttpRequest();
//             x.open('GET', 'https://api.telegram.org/bot1018757013:AAEHO9accUhscieT0ArRq9iwUeat6BmEzOM/sendMessage?chat_id=-1001471677614&text=' + message);
//             x.send();
//             x.onload = () => {
//                 if (x.status != 200) {
//                     reject(x.statusText)
//                 } else {
//                     resolve(x.responseText || '');
//                 }
//             };
//         })
//     }
//
// //время до просрочки в секундах
//     let timeToExpire = 1800;
//     const timeToExpireInput = document.querySelector('.options__time-to-expire');
//     const timeToExpireButton = document.querySelector('.options__time-to-expire-button');
//     timeToExpireButton.addEventListener('click', (e) => {
//         e.preventDefault();
//         timeToExpire = timeToExpireInput.value * 60;
//     })
//
// //время до отправки сообщения в секундах
//     let timeToSendMessage = 20;
//
// //временной интервал между запросами на сервер
//     let requestInterval = 10;
//
// //массив с заказами для отправки сообщения
//     let ordersToTelegram = [];
//
// //переменная для получения исходных данных
//     let externalContent = '';
//
// //создаем переменную для скрытой исходной таблицы
//     const table = document.querySelector('.table');
//
// //здаем переменную для строки просроченных заказов
//     const expiredOrders = document.querySelector('.expired-orders');
//
//
//     //последовательность асинхронных операций
//     callExternalContent()
//         .then(result => {
//                 externalContent = result;
//             },
//             error => console.log('Error' + ': ' + error))
//         .then(() => {
//             //вытаскиваем таблицу из исходного кода
//             externalContent = externalContent.substr(3476, externalContent.length - 3704);
//             table.innerHTML = externalContent;
//             //вытаскиваем строки
//             const rows = document.getElementsByTagName('tr');
//             //переменная для строк фильтрованной таблицы
//             let filteredRows = [];
//
//             //удаляем строки заголовков таблиц, удаляем отмененные заказы, формируем одну таблицу из двух
//             for (i = 0; i < rows.length; i++) {
//                 if (rows[i].innerHTML.length !== 377) {
//                     if (rows[i].children[3].innerHTML.length > 100) {
//                         rows[i].parentNode.removeChild(rows[i]);
//                     } else {
//                         filteredRows.push(rows[i]);
//                     }
//                 }
//             }
//
//             //удаляем четвертую ячейку
//             for (i = 0; i < filteredRows.length; i++) {
//                 filteredRows[i].removeChild(filteredRows[i].children[3]);
//
//                 //добавляем ячейку со временем
//                 let timeItem = document.createElement('td');
//                 filteredRows[i].appendChild(timeItem);
//             }
//
//             //рендерим таблицу
//             const filteredTable = document.querySelector('.filtered-table');
//             for (i = 0; i < filteredRows.length; i++) {
//                 filteredTable.innerHTML += filteredRows[i].innerHTML;
//             }
//
//             //Проверяем наличие заказа в session storage, добавляем заказ если его нет, проверяем время наборки
//             for (i = 0; i < filteredTable.children.length; i++) {
//                 //console.log(filteredTable);
//                 //получаем номер заказа из таблицы
//                 let orderNumber = parseInt(filteredTable.children[i].children[0].children[0].children[0].children[0].innerHTML);
//
//                 //проверяем наличие заказа в session storage
//                 //---если заказа нет, добавляем в session storage его номер как ключ и unixtime как значение
//                 if (!isOrderNumberInSessionStorage(orderNumber)) {
//                     sessionStorage.setItem(orderNumber, parseInt(new Date().getTime() / 1000));
//                     // --- устанавливаем время в четвертый столбец
//                     filteredTable.children[i].children[0].children[3].innerHTML = '0:00';
//                 } else {
//                     //если заказ есть, обновляем время
//                     let seconds = parseInt(new Date().getTime() / 1000) - sessionStorage.getItem(orderNumber);
//                     filteredTable.children[i].children[0].children[3].innerHTML = unixTimeToNormal(seconds);
//
//                     //если пора отправлять сообщение, отправляем его в session storage
//                     if (seconds > timeToSendMessage) {
//                         if (!isAddedToSendString(orderNumber)) {
//                             if (doesSessionStorageContainsToSendString()) {
//                                 sessionStorage.setItem('to-send', sessionStorage.getItem('to-send') + '|' + orderNumber);
//                             } else {
//                                 sessionStorage.setItem('to-send', orderNumber);
//                             }
//                         }
//                     }
//
//                     //если заказ просрочен, отправляем его в session storage
//                     if (seconds > timeToExpire) {
//                         if (!isAdded(orderNumber)) {
//                             if (doesSessionStorageContainsExpiredString()) {
//                                 sessionStorage.setItem('expired', sessionStorage.getItem('expired') + '|' + orderNumber);
//                             } else {
//                                 sessionStorage.setItem('expired', orderNumber);
//                             }
//                         }
//                     }
//                 }
//             }
//             //Формируем строку с просроченными заказами
//             if (doesSessionStorageContainsExpiredString()) {
//                 let text = sessionStorage.getItem('expired');
//                 text = text.split('|');
//                 let createdText = '';
//                 for (i = 0; i < text.length; i++) {
//                     createdText += ", " + text[i];
//                 }
//                 createdText = createdText.substr(2);
//                 expiredOrders.innerHTML = createdText;
//             }
// //Проверяем, отправлены ли сообщения по заказам
//             if (doesSessionStorageContainsToSendString()) {
//                 let ordersToSend = sessionStorage.getItem('to-send');
//                 let ordersToSendArray = ordersToSend.split('|');
//                 if (doesSessionStorageContainsSentString()) {
//                     let sentOrders = sessionStorage.getItem('sent');
//                     let sentOrdersArray = sentOrders.split('|');
//                     for (i = 0; i < ordersToSendArray.length; i++) {
//                         for (j = 0; j < sentOrdersArray.length; j++) {
//                             if (ordersToSendArray[i] == sentOrdersArray[j]) {
//                                 ordersToSendArray.splice(i, 1);
//                             }
//                         }
//                     }
//                 }
//                 if (ordersToSendArray) {
//                     ordersToTelegram = ordersToSendArray;
//                 }
//             }
//
//         })
//         .then(() => {
//             if (ordersToTelegram) {
//                 for (i = 0; i < ordersToTelegram.length; i++) {
//                     console.log('Заказ ' + ordersToTelegram[i] + ' в наборе уже ' + timeToSendMessage / 60 + ' минут');
//                     //sendMessage('Заказ ' + ordersToTelegram[i] + ' в наборе уже ' + timeToSendMessage/60 + ' минут');
//                     if (doesSessionStorageContainsSentString()) {
//                         sessionStorage.setItem('sent', sessionStorage.getItem('sent') + '|' + ordersToTelegram[i]);
//                     } else {
//                         sessionStorage.setItem('sent', ordersToTelegram[i]);
//                     }
//                 }
//             }
//         })
//          .then(() => {
//              window.setTimeout(() => document.location.reload(), 10000);
//          })
})

//устанавливаем интервал, время сообщения, время до просрочки
document.querySelector('.options__time-to-expire-button').addEventListener('click', (e) => {
    e.preventDefault();
    const expireTextArea = document.querySelector('.options__time-to-expire');
    if (expireTextArea.value) {
        const mainObject = getMainObject();
        mainObject.expirationTime = parseInt(expireTextArea.value) * 60;
        setMainObject(mainObject);
        expireTextArea.placeholder = expireTextArea.value;
        expireTextArea.value = '';
    } else {
        //TODO: Дописать вывод на экран сообщения о том, что значение не введено
    }
})

document.querySelector('.options__time-to-send-message-button').addEventListener('click', (e) => {
    e.preventDefault();
    const messageTextArea = document.querySelector('.options__time-to-send-message');
    if (messageTextArea.value) {
        const mainObject = getMainObject();
        mainObject.messageTime = parseInt(messageTextArea.value) * 60;
        messageTextArea.placeholder = messageTextArea.value;
        messageTextArea.value = '';
        setMainObject(mainObject);
    } else {
        //TODO: дописать вывод на экран о том, что значение не введено
    }
})

document.querySelector('.options__request-interval-button').addEventListener('click', (e) => {
    e.preventDefault();
    const requestTextArea = document.querySelector('.options__request-interval');
    if (requestTextArea.value && parseInt(requestTextArea.value) > 10) {
        const mainObject = getMainObject();
        mainObject.requestInterval = parseInt(requestTextArea.value) * 1000;
        requestTextArea.placeholder = requestTextArea.value;
        requestTextArea.value = '';
        setMainObject(mainObject);
    } else {
        //TODO: дописать вывод на экран о том, что значение не введено или меньше 10 сек
    }
})
//# sourceMappingURL=data:application/json;charset=utf8;base64,
