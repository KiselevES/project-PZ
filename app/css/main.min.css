/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{font-size:16px}body{font-family:Roboto;font-weight:300;-webkit-font-smoothing:antialiased;line-height:1.42;background:#fff;padding:10px 0}body,html{width:100%;height:100%}.wrapper{min-height:100%;overflow:hidden;position:relative;min-width:940px}.wrapper:after{content:"";height:50px;display:block;overflow:hidden}footer{text-align:center;height:50px;margin-top:-50px;position:relative;width:100%}.container{max-width:940px;margin:0 auto}*{box-sizing:border-box}ul{padding:0;margin:0}li{list-style:none}p{margin-top:0}h1,h2,h3,h4,h5,h6{margin-top:0;font-weight:400}body{background:#c6b4b4}.options__label{font-size:14px}.input{width:30px;border-radius:5px;border:1px solid #e9011b}.input__outer{margin-bottom:5px}.footer .container{background:#e9011b;height:100%;border-radius:0 0 10px 10px}.header .container{background:#e9011b;border-radius:10px 10px 0 0}.outer{margin:0 auto;width:531px}.outer:after{display:block;content:"";clear:both}.logo{padding:20px;float:left}.header-text{color:#fff;float:left;font-size:22px;margin-top:50px;font-weight:400}.logo__img{max-height:85px}.table{display:none}.main .container{background:#d0d0d0}.set-height{border-right:1px solid #e9011b;border-left:1px solid #e9011b;padding:15px}td{width:90px;height:20px;border:1px solid #000;text-align:center;vertical-align:middle}.check:after{display:inline-block;content:"X"}.new-table{border:1px solid #e9011b;width:100%;margin:0 auto;border-radius:10px;border-spacing:0;overflow:hidden;margin-bottom:10px}.new-table thead{background:#e9011b;color:#fff;font-family:Roboto}.new-table__header-cell{border-top:0;border-right:0;border-left:1px solid #e9011b;border-bottom:1px solid #e9011b}.new-table__header-cell:first-child{border-left:0}.new-table__order-warning{background:rgba(253,205,24,.3)}.new-table__order-expired{background:rgba(233,1,27,.3)}.new-table__order-normal{background:rgba(117,233,1,.3)}.new-table__order-remade{background:rgba(1,105,233,.3)}.new-table__cell{border-top:0;border-right:0;border-left:1px solid #e9011b;border-bottom:0}.new-table__cell:first-child{border-left:0;width:30px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
